using NToolbox.Globalization;
using NUnit.Framework;
using System.Collections;

namespace NToolbox.Tests.TestCaseSources
{
	public static class CountryAlpha2TestCaseSource
	{
		#region Test Case Sources
		public static IEnumerable CountryAlpha2_TestCases()
		{
			yield return new TestCaseData(CountryAlpha2.Afghanistan, "AF");
			yield return new TestCaseData(CountryAlpha2.AlandIslands, "AX");
			yield return new TestCaseData(CountryAlpha2.Albania, "AL");
			yield return new TestCaseData(CountryAlpha2.Algeria, "DZ");
			yield return new TestCaseData(CountryAlpha2.AmericanSamoa, "AS");
			yield return new TestCaseData(CountryAlpha2.Andorra, "AD");
			yield return new TestCaseData(CountryAlpha2.Angola, "AO");
			yield return new TestCaseData(CountryAlpha2.Anguilla, "AI");
			yield return new TestCaseData(CountryAlpha2.Antarctica, "AQ");
			yield return new TestCaseData(CountryAlpha2.AntiguaAndBarbuda, "AG");
			yield return new TestCaseData(CountryAlpha2.Argentina, "AR");
			yield return new TestCaseData(CountryAlpha2.Armenia, "AM");
			yield return new TestCaseData(CountryAlpha2.Aruba, "AW");
			yield return new TestCaseData(CountryAlpha2.Australia, "AU");
			yield return new TestCaseData(CountryAlpha2.Austria, "AT");
			yield return new TestCaseData(CountryAlpha2.Azerbaijan, "AZ");
			yield return new TestCaseData(CountryAlpha2.Bahamas, "BS");
			yield return new TestCaseData(CountryAlpha2.Bahrain, "BH");
			yield return new TestCaseData(CountryAlpha2.Bangladesh, "BD");
			yield return new TestCaseData(CountryAlpha2.Barbados, "BB");
			yield return new TestCaseData(CountryAlpha2.Belarus, "BY");
			yield return new TestCaseData(CountryAlpha2.Belgium, "BE");
			yield return new TestCaseData(CountryAlpha2.Belize, "BZ");
			yield return new TestCaseData(CountryAlpha2.Benin, "BJ");
			yield return new TestCaseData(CountryAlpha2.Bermuda, "BM");
			yield return new TestCaseData(CountryAlpha2.Bhutan, "BT");
			yield return new TestCaseData(CountryAlpha2.Bolivia, "BO");
			yield return new TestCaseData(CountryAlpha2.BonaireSintEustatiusAndSaba, "BQ");
			yield return new TestCaseData(CountryAlpha2.BosniaAndHerzegovina, "BA");
			yield return new TestCaseData(CountryAlpha2.Botswana, "BW");
			yield return new TestCaseData(CountryAlpha2.BouvetIsland, "BV");
			yield return new TestCaseData(CountryAlpha2.Brazil, "BR");
			yield return new TestCaseData(CountryAlpha2.BritishIndianOceanTerritory, "IO");
			yield return new TestCaseData(CountryAlpha2.BruneiDarussalam, "BN");
			yield return new TestCaseData(CountryAlpha2.Bulgaria, "BG");
			yield return new TestCaseData(CountryAlpha2.BurkinaFaso, "BF");
			yield return new TestCaseData(CountryAlpha2.Burundi, "BI");
			yield return new TestCaseData(CountryAlpha2.Cambodia, "KH");
			yield return new TestCaseData(CountryAlpha2.Cameroon, "CM");
			yield return new TestCaseData(CountryAlpha2.Canada, "CA");
			yield return new TestCaseData(CountryAlpha2.CaboVerde, "CV");
			yield return new TestCaseData(CountryAlpha2.CaymanIslands, "KY");
			yield return new TestCaseData(CountryAlpha2.CentralAfricanRepublic, "CF");
			yield return new TestCaseData(CountryAlpha2.Chad, "TD");
			yield return new TestCaseData(CountryAlpha2.Chile, "CL");
			yield return new TestCaseData(CountryAlpha2.China, "CN");
			yield return new TestCaseData(CountryAlpha2.ChristmasIsland, "CX");
			yield return new TestCaseData(CountryAlpha2.CocosIslands, "CC");
			yield return new TestCaseData(CountryAlpha2.Colombia, "CO");
			yield return new TestCaseData(CountryAlpha2.Comoros, "KM");
			yield return new TestCaseData(CountryAlpha2.Congo, "CG");
			yield return new TestCaseData(CountryAlpha2.CongoDemocraticRepublic, "CD");
			yield return new TestCaseData(CountryAlpha2.CookIslands, "CK");
			yield return new TestCaseData(CountryAlpha2.CostaRica, "CR");
			yield return new TestCaseData(CountryAlpha2.CoteDIvoire, "CI");
			yield return new TestCaseData(CountryAlpha2.Croatia, "HR");
			yield return new TestCaseData(CountryAlpha2.Cuba, "CU");
			yield return new TestCaseData(CountryAlpha2.Curacao, "CW");
			yield return new TestCaseData(CountryAlpha2.Cyprus, "CY");
			yield return new TestCaseData(CountryAlpha2.CzechRepublic, "CZ");
			yield return new TestCaseData(CountryAlpha2.Denmark, "DK");
			yield return new TestCaseData(CountryAlpha2.Djibouti, "DJ");
			yield return new TestCaseData(CountryAlpha2.Dominica, "DM");
			yield return new TestCaseData(CountryAlpha2.DominicanRepublic, "DO");
			yield return new TestCaseData(CountryAlpha2.Ecuador, "EC");
			yield return new TestCaseData(CountryAlpha2.Egypt, "EG");
			yield return new TestCaseData(CountryAlpha2.ElSalvador, "SV");
			yield return new TestCaseData(CountryAlpha2.EquatorialGuinea, "GQ");
			yield return new TestCaseData(CountryAlpha2.Eritrea, "ER");
			yield return new TestCaseData(CountryAlpha2.Estonia, "EE");
			yield return new TestCaseData(CountryAlpha2.Ethiopia, "ET");
			yield return new TestCaseData(CountryAlpha2.FalklandIslands, "FK");
			yield return new TestCaseData(CountryAlpha2.FaroeIslands, "FO");
			yield return new TestCaseData(CountryAlpha2.Fiji, "FJ");
			yield return new TestCaseData(CountryAlpha2.Finland, "FI");
			yield return new TestCaseData(CountryAlpha2.France, "FR");
			yield return new TestCaseData(CountryAlpha2.FrenchGuiana, "GF");
			yield return new TestCaseData(CountryAlpha2.FrenchPolynesia, "PF");
			yield return new TestCaseData(CountryAlpha2.FrenchSouthernTerritories, "TF");
			yield return new TestCaseData(CountryAlpha2.Gabon, "GA");
			yield return new TestCaseData(CountryAlpha2.Gambia, "GM");
			yield return new TestCaseData(CountryAlpha2.Georgia, "GE");
			yield return new TestCaseData(CountryAlpha2.Germany, "DE");
			yield return new TestCaseData(CountryAlpha2.Ghana, "GH");
			yield return new TestCaseData(CountryAlpha2.Gibraltar, "GI");
			yield return new TestCaseData(CountryAlpha2.Greece, "GR");
			yield return new TestCaseData(CountryAlpha2.Greenland, "GL");
			yield return new TestCaseData(CountryAlpha2.Grenada, "GD");
			yield return new TestCaseData(CountryAlpha2.Guadeloupe, "GP");
			yield return new TestCaseData(CountryAlpha2.Guam, "GU");
			yield return new TestCaseData(CountryAlpha2.Guatemala, "GT");
			yield return new TestCaseData(CountryAlpha2.Guernsey, "GG");
			yield return new TestCaseData(CountryAlpha2.Guinea, "GN");
			yield return new TestCaseData(CountryAlpha2.GuineaBissau, "GW");
			yield return new TestCaseData(CountryAlpha2.Guyana, "GY");
			yield return new TestCaseData(CountryAlpha2.Haiti, "HT");
			yield return new TestCaseData(CountryAlpha2.HeardIslandAndMcDonaldIslands, "HM");
			yield return new TestCaseData(CountryAlpha2.HolySee, "VA");
			yield return new TestCaseData(CountryAlpha2.Honduras, "HN");
			yield return new TestCaseData(CountryAlpha2.HongKong, "HK");
			yield return new TestCaseData(CountryAlpha2.Hungary, "HU");
			yield return new TestCaseData(CountryAlpha2.Iceland, "IS");
			yield return new TestCaseData(CountryAlpha2.India, "IN");
			yield return new TestCaseData(CountryAlpha2.Indonesia, "ID");
			yield return new TestCaseData(CountryAlpha2.Iran, "IR");
			yield return new TestCaseData(CountryAlpha2.Iraq, "IQ");
			yield return new TestCaseData(CountryAlpha2.Ireland, "IE");
			yield return new TestCaseData(CountryAlpha2.IsleOfMan, "IM");
			yield return new TestCaseData(CountryAlpha2.Israel, "IL");
			yield return new TestCaseData(CountryAlpha2.Italy, "IT");
			yield return new TestCaseData(CountryAlpha2.Jamaica, "JM");
			yield return new TestCaseData(CountryAlpha2.Japan, "JP");
			yield return new TestCaseData(CountryAlpha2.Jersey, "JE");
			yield return new TestCaseData(CountryAlpha2.Jordan, "JO");
			yield return new TestCaseData(CountryAlpha2.Kazakhstan, "KZ");
			yield return new TestCaseData(CountryAlpha2.Kenya, "KE");
			yield return new TestCaseData(CountryAlpha2.Kiribati, "KI");
			yield return new TestCaseData(CountryAlpha2.NorthKorea, "KP");
			yield return new TestCaseData(CountryAlpha2.SouthKorea, "KR");
			yield return new TestCaseData(CountryAlpha2.Kuwait, "KW");
			yield return new TestCaseData(CountryAlpha2.Kyrgyzstan, "KG");
			yield return new TestCaseData(CountryAlpha2.Laos, "LA");
			yield return new TestCaseData(CountryAlpha2.Latvia, "LV");
			yield return new TestCaseData(CountryAlpha2.Lebanon, "LB");
			yield return new TestCaseData(CountryAlpha2.Lesotho, "LS");
			yield return new TestCaseData(CountryAlpha2.Liberia, "LR");
			yield return new TestCaseData(CountryAlpha2.Libya, "LY");
			yield return new TestCaseData(CountryAlpha2.Liechtenstein, "LI");
			yield return new TestCaseData(CountryAlpha2.Lithuania, "LT");
			yield return new TestCaseData(CountryAlpha2.Luxembourg, "LU");
			yield return new TestCaseData(CountryAlpha2.Macao, "MO");
			yield return new TestCaseData(CountryAlpha2.Macedonia, "MK");
			yield return new TestCaseData(CountryAlpha2.Madagascar, "MG");
			yield return new TestCaseData(CountryAlpha2.Malawi, "MW");
			yield return new TestCaseData(CountryAlpha2.Malaysia, "MY");
			yield return new TestCaseData(CountryAlpha2.Maldives, "MV");
			yield return new TestCaseData(CountryAlpha2.Mali, "ML");
			yield return new TestCaseData(CountryAlpha2.Malta, "MT");
			yield return new TestCaseData(CountryAlpha2.MarshallIslands, "MH");
			yield return new TestCaseData(CountryAlpha2.Martinique, "MQ");
			yield return new TestCaseData(CountryAlpha2.Mauritania, "MR");
			yield return new TestCaseData(CountryAlpha2.Mauritius, "MU");
			yield return new TestCaseData(CountryAlpha2.Mayotte, "YT");
			yield return new TestCaseData(CountryAlpha2.Mexico, "MX");
			yield return new TestCaseData(CountryAlpha2.Micronesia, "FM");
			yield return new TestCaseData(CountryAlpha2.Moldova, "MD");
			yield return new TestCaseData(CountryAlpha2.Monaco, "MC");
			yield return new TestCaseData(CountryAlpha2.Mongolia, "MN");
			yield return new TestCaseData(CountryAlpha2.Montenegro, "ME");
			yield return new TestCaseData(CountryAlpha2.Montserrat, "MS");
			yield return new TestCaseData(CountryAlpha2.Morocco, "MA");
			yield return new TestCaseData(CountryAlpha2.Mozambique, "MZ");
			yield return new TestCaseData(CountryAlpha2.Myanmar, "MM");
			yield return new TestCaseData(CountryAlpha2.Namibia, "NA");
			yield return new TestCaseData(CountryAlpha2.Nauru, "NR");
			yield return new TestCaseData(CountryAlpha2.Nepal, "NP");
			yield return new TestCaseData(CountryAlpha2.Netherlands, "NL");
			yield return new TestCaseData(CountryAlpha2.NewCaledonia, "NC");
			yield return new TestCaseData(CountryAlpha2.NewZealand, "NZ");
			yield return new TestCaseData(CountryAlpha2.Nicaragua, "NI");
			yield return new TestCaseData(CountryAlpha2.Niger, "NE");
			yield return new TestCaseData(CountryAlpha2.Nigeria, "NG");
			yield return new TestCaseData(CountryAlpha2.Niue, "NU");
			yield return new TestCaseData(CountryAlpha2.NorfolkIsland, "NF");
			yield return new TestCaseData(CountryAlpha2.NorthernMarianaIslands, "MP");
			yield return new TestCaseData(CountryAlpha2.Norway, "NO");
			yield return new TestCaseData(CountryAlpha2.Oman, "OM");
			yield return new TestCaseData(CountryAlpha2.Pakistan, "PK");
			yield return new TestCaseData(CountryAlpha2.Palau, "PW");
			yield return new TestCaseData(CountryAlpha2.Palestine, "PS");
			yield return new TestCaseData(CountryAlpha2.Panama, "PA");
			yield return new TestCaseData(CountryAlpha2.PapuaNewGuinea, "PG");
			yield return new TestCaseData(CountryAlpha2.Paraguay, "PY");
			yield return new TestCaseData(CountryAlpha2.Peru, "PE");
			yield return new TestCaseData(CountryAlpha2.Philippines, "PH");
			yield return new TestCaseData(CountryAlpha2.Pitcairn, "PN");
			yield return new TestCaseData(CountryAlpha2.Poland, "PL");
			yield return new TestCaseData(CountryAlpha2.Portugal, "PT");
			yield return new TestCaseData(CountryAlpha2.PuertoRico, "PR");
			yield return new TestCaseData(CountryAlpha2.Qatar, "QA");
			yield return new TestCaseData(CountryAlpha2.Reunion, "RE");
			yield return new TestCaseData(CountryAlpha2.Romania, "RO");
			yield return new TestCaseData(CountryAlpha2.RussianFederation, "RU");
			yield return new TestCaseData(CountryAlpha2.Rwanda, "RW");
			yield return new TestCaseData(CountryAlpha2.SaintBarthelemy, "BL");
			yield return new TestCaseData(CountryAlpha2.SaintHelenaAscensionAndTristanDaCunha, "SH");
			yield return new TestCaseData(CountryAlpha2.SaintKittsAndNevis, "KN");
			yield return new TestCaseData(CountryAlpha2.SaintLucia, "LC");
			yield return new TestCaseData(CountryAlpha2.SaintMartin, "MF");
			yield return new TestCaseData(CountryAlpha2.SaintPierreAndMiquelon, "PM");
			yield return new TestCaseData(CountryAlpha2.SaintVincentAndTheGrenadines, "VC");
			yield return new TestCaseData(CountryAlpha2.Samoa, "WS");
			yield return new TestCaseData(CountryAlpha2.SanMarino, "SM");
			yield return new TestCaseData(CountryAlpha2.SaoTomeAndPrincipe, "ST");
			yield return new TestCaseData(CountryAlpha2.SaudiArabia, "SA");
			yield return new TestCaseData(CountryAlpha2.Senegal, "SN");
			yield return new TestCaseData(CountryAlpha2.Serbia, "RS");
			yield return new TestCaseData(CountryAlpha2.Seychelles, "SC");
			yield return new TestCaseData(CountryAlpha2.SierraLeone, "SL");
			yield return new TestCaseData(CountryAlpha2.Singapore, "SG");
			yield return new TestCaseData(CountryAlpha2.SintMaarten, "SX");
			yield return new TestCaseData(CountryAlpha2.Slovakia, "SK");
			yield return new TestCaseData(CountryAlpha2.Slovenia, "SI");
			yield return new TestCaseData(CountryAlpha2.SolomonIslands, "SB");
			yield return new TestCaseData(CountryAlpha2.Somalia, "SO");
			yield return new TestCaseData(CountryAlpha2.SouthAfrica, "ZA");
			yield return new TestCaseData(CountryAlpha2.SouthGeorgiaAndTheSouthSandwichIslands, "GS");
			yield return new TestCaseData(CountryAlpha2.SouthSudan, "SS");
			yield return new TestCaseData(CountryAlpha2.Spain, "ES");
			yield return new TestCaseData(CountryAlpha2.SriLanka, "LK");
			yield return new TestCaseData(CountryAlpha2.Sudan, "SD");
			yield return new TestCaseData(CountryAlpha2.Suriname, "SR");
			yield return new TestCaseData(CountryAlpha2.SvalbardAndJanMayen, "SJ");
			yield return new TestCaseData(CountryAlpha2.Swaziland, "SZ");
			yield return new TestCaseData(CountryAlpha2.Sweden, "SE");
			yield return new TestCaseData(CountryAlpha2.Switzerland, "CH");
			yield return new TestCaseData(CountryAlpha2.Syria, "SY");
			yield return new TestCaseData(CountryAlpha2.Taiwan, "TW");
			yield return new TestCaseData(CountryAlpha2.Tajikistan, "TJ");
			yield return new TestCaseData(CountryAlpha2.Tanzania, "TZ");
			yield return new TestCaseData(CountryAlpha2.Thailand, "TH");
			yield return new TestCaseData(CountryAlpha2.TimorLeste, "TL");
			yield return new TestCaseData(CountryAlpha2.Togo, "TG");
			yield return new TestCaseData(CountryAlpha2.Tokelau, "TK");
			yield return new TestCaseData(CountryAlpha2.Tonga, "TO");
			yield return new TestCaseData(CountryAlpha2.TrinidadAndTobago, "TT");
			yield return new TestCaseData(CountryAlpha2.Tunisia, "TN");
			yield return new TestCaseData(CountryAlpha2.Turkey, "TR");
			yield return new TestCaseData(CountryAlpha2.Turkmenistan, "TM");
			yield return new TestCaseData(CountryAlpha2.TurksAndCaicosIslands, "TC");
			yield return new TestCaseData(CountryAlpha2.Tuvalu, "TV");
			yield return new TestCaseData(CountryAlpha2.Uganda, "UG");
			yield return new TestCaseData(CountryAlpha2.Ukraine, "UA");
			yield return new TestCaseData(CountryAlpha2.UnitedArabEmirates, "AE");
			yield return new TestCaseData(CountryAlpha2.UnitedKingdom, "GB");
			yield return new TestCaseData(CountryAlpha2.UnitedStatesOfAmerica, "US");
			yield return new TestCaseData(CountryAlpha2.UnitedStatesMinorOutlyingIslands, "UM");
			yield return new TestCaseData(CountryAlpha2.Uruguay, "UY");
			yield return new TestCaseData(CountryAlpha2.Uzbekistan, "UZ");
			yield return new TestCaseData(CountryAlpha2.Vanuatu, "VU");
			yield return new TestCaseData(CountryAlpha2.Venezuela, "VE");
			yield return new TestCaseData(CountryAlpha2.Vietnam, "VN");
			yield return new TestCaseData(CountryAlpha2.VirginIslandsBritish, "VG");
			yield return new TestCaseData(CountryAlpha2.VirginIslandsUS, "VI");
			yield return new TestCaseData(CountryAlpha2.WallisAndFutuna, "WF");
			yield return new TestCaseData(CountryAlpha2.WesternSahara, "EH");
			yield return new TestCaseData(CountryAlpha2.Yemen, "YE");
			yield return new TestCaseData(CountryAlpha2.Zambia, "ZM");
			yield return new TestCaseData(CountryAlpha2.Zimbabwe, "ZW");
		}
		#endregion
	}
}